package network

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

        // ApplicationGatewayBackendHealthServerHealth enumerates the values for application gateway backend health
        // server health.
    type ApplicationGatewayBackendHealthServerHealth string

    const (
                // Down ...
        Down ApplicationGatewayBackendHealthServerHealth = "Down"
                // Draining ...
        Draining ApplicationGatewayBackendHealthServerHealth = "Draining"
                // Partial ...
        Partial ApplicationGatewayBackendHealthServerHealth = "Partial"
                // Unknown ...
        Unknown ApplicationGatewayBackendHealthServerHealth = "Unknown"
                // Up ...
        Up ApplicationGatewayBackendHealthServerHealth = "Up"
            )
    // PossibleApplicationGatewayBackendHealthServerHealthValues returns an array of possible values for the ApplicationGatewayBackendHealthServerHealth const type.
    func PossibleApplicationGatewayBackendHealthServerHealthValues() []ApplicationGatewayBackendHealthServerHealth {
        return []ApplicationGatewayBackendHealthServerHealth{Down,Draining,Partial,Unknown,Up}
    }

        // ApplicationGatewayCookieBasedAffinity enumerates the values for application gateway cookie based affinity.
    type ApplicationGatewayCookieBasedAffinity string

    const (
                // Disabled ...
        Disabled ApplicationGatewayCookieBasedAffinity = "Disabled"
                // Enabled ...
        Enabled ApplicationGatewayCookieBasedAffinity = "Enabled"
            )
    // PossibleApplicationGatewayCookieBasedAffinityValues returns an array of possible values for the ApplicationGatewayCookieBasedAffinity const type.
    func PossibleApplicationGatewayCookieBasedAffinityValues() []ApplicationGatewayCookieBasedAffinity {
        return []ApplicationGatewayCookieBasedAffinity{Disabled,Enabled}
    }

        // ApplicationGatewayCustomErrorStatusCode enumerates the values for application gateway custom error status
        // code.
    type ApplicationGatewayCustomErrorStatusCode string

    const (
                // HTTPStatus403 ...
        HTTPStatus403 ApplicationGatewayCustomErrorStatusCode = "HttpStatus403"
                // HTTPStatus502 ...
        HTTPStatus502 ApplicationGatewayCustomErrorStatusCode = "HttpStatus502"
            )
    // PossibleApplicationGatewayCustomErrorStatusCodeValues returns an array of possible values for the ApplicationGatewayCustomErrorStatusCode const type.
    func PossibleApplicationGatewayCustomErrorStatusCodeValues() []ApplicationGatewayCustomErrorStatusCode {
        return []ApplicationGatewayCustomErrorStatusCode{HTTPStatus403,HTTPStatus502}
    }

        // ApplicationGatewayFirewallMode enumerates the values for application gateway firewall mode.
    type ApplicationGatewayFirewallMode string

    const (
                // Detection ...
        Detection ApplicationGatewayFirewallMode = "Detection"
                // Prevention ...
        Prevention ApplicationGatewayFirewallMode = "Prevention"
            )
    // PossibleApplicationGatewayFirewallModeValues returns an array of possible values for the ApplicationGatewayFirewallMode const type.
    func PossibleApplicationGatewayFirewallModeValues() []ApplicationGatewayFirewallMode {
        return []ApplicationGatewayFirewallMode{Detection,Prevention}
    }

        // ApplicationGatewayLoadDistributionAlgorithm enumerates the values for application gateway load distribution
        // algorithm.
    type ApplicationGatewayLoadDistributionAlgorithm string

    const (
                // IPHash ...
        IPHash ApplicationGatewayLoadDistributionAlgorithm = "IpHash"
                // LeastConnections ...
        LeastConnections ApplicationGatewayLoadDistributionAlgorithm = "LeastConnections"
                // RoundRobin ...
        RoundRobin ApplicationGatewayLoadDistributionAlgorithm = "RoundRobin"
            )
    // PossibleApplicationGatewayLoadDistributionAlgorithmValues returns an array of possible values for the ApplicationGatewayLoadDistributionAlgorithm const type.
    func PossibleApplicationGatewayLoadDistributionAlgorithmValues() []ApplicationGatewayLoadDistributionAlgorithm {
        return []ApplicationGatewayLoadDistributionAlgorithm{IPHash,LeastConnections,RoundRobin}
    }

        // ApplicationGatewayOperationalState enumerates the values for application gateway operational state.
    type ApplicationGatewayOperationalState string

    const (
                // Running ...
        Running ApplicationGatewayOperationalState = "Running"
                // Starting ...
        Starting ApplicationGatewayOperationalState = "Starting"
                // Stopped ...
        Stopped ApplicationGatewayOperationalState = "Stopped"
                // Stopping ...
        Stopping ApplicationGatewayOperationalState = "Stopping"
            )
    // PossibleApplicationGatewayOperationalStateValues returns an array of possible values for the ApplicationGatewayOperationalState const type.
    func PossibleApplicationGatewayOperationalStateValues() []ApplicationGatewayOperationalState {
        return []ApplicationGatewayOperationalState{Running,Starting,Stopped,Stopping}
    }

        // ApplicationGatewayProtocol enumerates the values for application gateway protocol.
    type ApplicationGatewayProtocol string

    const (
                // HTTP ...
        HTTP ApplicationGatewayProtocol = "Http"
                // HTTPS ...
        HTTPS ApplicationGatewayProtocol = "Https"
            )
    // PossibleApplicationGatewayProtocolValues returns an array of possible values for the ApplicationGatewayProtocol const type.
    func PossibleApplicationGatewayProtocolValues() []ApplicationGatewayProtocol {
        return []ApplicationGatewayProtocol{HTTP,HTTPS}
    }

        // ApplicationGatewayRedirectType enumerates the values for application gateway redirect type.
    type ApplicationGatewayRedirectType string

    const (
                // Found ...
        Found ApplicationGatewayRedirectType = "Found"
                // Permanent ...
        Permanent ApplicationGatewayRedirectType = "Permanent"
                // SeeOther ...
        SeeOther ApplicationGatewayRedirectType = "SeeOther"
                // Temporary ...
        Temporary ApplicationGatewayRedirectType = "Temporary"
            )
    // PossibleApplicationGatewayRedirectTypeValues returns an array of possible values for the ApplicationGatewayRedirectType const type.
    func PossibleApplicationGatewayRedirectTypeValues() []ApplicationGatewayRedirectType {
        return []ApplicationGatewayRedirectType{Found,Permanent,SeeOther,Temporary}
    }

        // ApplicationGatewayRequestRoutingRuleType enumerates the values for application gateway request routing rule
        // type.
    type ApplicationGatewayRequestRoutingRuleType string

    const (
                // Basic ...
        Basic ApplicationGatewayRequestRoutingRuleType = "Basic"
                // PathBasedRouting ...
        PathBasedRouting ApplicationGatewayRequestRoutingRuleType = "PathBasedRouting"
            )
    // PossibleApplicationGatewayRequestRoutingRuleTypeValues returns an array of possible values for the ApplicationGatewayRequestRoutingRuleType const type.
    func PossibleApplicationGatewayRequestRoutingRuleTypeValues() []ApplicationGatewayRequestRoutingRuleType {
        return []ApplicationGatewayRequestRoutingRuleType{Basic,PathBasedRouting}
    }

        // ApplicationGatewaySkuName enumerates the values for application gateway sku name.
    type ApplicationGatewaySkuName string

    const (
                // StandardLarge ...
        StandardLarge ApplicationGatewaySkuName = "Standard_Large"
                // StandardMedium ...
        StandardMedium ApplicationGatewaySkuName = "Standard_Medium"
                // StandardSmall ...
        StandardSmall ApplicationGatewaySkuName = "Standard_Small"
                // StandardV2 ...
        StandardV2 ApplicationGatewaySkuName = "Standard_v2"
                // WAFLarge ...
        WAFLarge ApplicationGatewaySkuName = "WAF_Large"
                // WAFMedium ...
        WAFMedium ApplicationGatewaySkuName = "WAF_Medium"
                // WAFV2 ...
        WAFV2 ApplicationGatewaySkuName = "WAF_v2"
            )
    // PossibleApplicationGatewaySkuNameValues returns an array of possible values for the ApplicationGatewaySkuName const type.
    func PossibleApplicationGatewaySkuNameValues() []ApplicationGatewaySkuName {
        return []ApplicationGatewaySkuName{StandardLarge,StandardMedium,StandardSmall,StandardV2,WAFLarge,WAFMedium,WAFV2}
    }

        // ApplicationGatewaySslCipherSuite enumerates the values for application gateway ssl cipher suite.
    type ApplicationGatewaySslCipherSuite string

    const (
                // TLSDHEDSSWITH3DESEDECBCSHA ...
        TLSDHEDSSWITH3DESEDECBCSHA ApplicationGatewaySslCipherSuite = "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"
                // TLSDHEDSSWITHAES128CBCSHA ...
        TLSDHEDSSWITHAES128CBCSHA ApplicationGatewaySslCipherSuite = "TLS_DHE_DSS_WITH_AES_128_CBC_SHA"
                // TLSDHEDSSWITHAES128CBCSHA256 ...
        TLSDHEDSSWITHAES128CBCSHA256 ApplicationGatewaySslCipherSuite = "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"
                // TLSDHEDSSWITHAES256CBCSHA ...
        TLSDHEDSSWITHAES256CBCSHA ApplicationGatewaySslCipherSuite = "TLS_DHE_DSS_WITH_AES_256_CBC_SHA"
                // TLSDHEDSSWITHAES256CBCSHA256 ...
        TLSDHEDSSWITHAES256CBCSHA256 ApplicationGatewaySslCipherSuite = "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256"
                // TLSDHERSAWITHAES128CBCSHA ...
        TLSDHERSAWITHAES128CBCSHA ApplicationGatewaySslCipherSuite = "TLS_DHE_RSA_WITH_AES_128_CBC_SHA"
                // TLSDHERSAWITHAES128GCMSHA256 ...
        TLSDHERSAWITHAES128GCMSHA256 ApplicationGatewaySslCipherSuite = "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"
                // TLSDHERSAWITHAES256CBCSHA ...
        TLSDHERSAWITHAES256CBCSHA ApplicationGatewaySslCipherSuite = "TLS_DHE_RSA_WITH_AES_256_CBC_SHA"
                // TLSDHERSAWITHAES256GCMSHA384 ...
        TLSDHERSAWITHAES256GCMSHA384 ApplicationGatewaySslCipherSuite = "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384"
                // TLSECDHEECDSAWITHAES128CBCSHA ...
        TLSECDHEECDSAWITHAES128CBCSHA ApplicationGatewaySslCipherSuite = "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"
                // TLSECDHEECDSAWITHAES128CBCSHA256 ...
        TLSECDHEECDSAWITHAES128CBCSHA256 ApplicationGatewaySslCipherSuite = "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"
                // TLSECDHEECDSAWITHAES128GCMSHA256 ...
        TLSECDHEECDSAWITHAES128GCMSHA256 ApplicationGatewaySslCipherSuite = "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
                // TLSECDHEECDSAWITHAES256CBCSHA ...
        TLSECDHEECDSAWITHAES256CBCSHA ApplicationGatewaySslCipherSuite = "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"
                // TLSECDHEECDSAWITHAES256CBCSHA384 ...
        TLSECDHEECDSAWITHAES256CBCSHA384 ApplicationGatewaySslCipherSuite = "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"
                // TLSECDHEECDSAWITHAES256GCMSHA384 ...
        TLSECDHEECDSAWITHAES256GCMSHA384 ApplicationGatewaySslCipherSuite = "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
                // TLSECDHERSAWITHAES128CBCSHA ...
        TLSECDHERSAWITHAES128CBCSHA ApplicationGatewaySslCipherSuite = "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"
                // TLSECDHERSAWITHAES128CBCSHA256 ...
        TLSECDHERSAWITHAES128CBCSHA256 ApplicationGatewaySslCipherSuite = "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"
                // TLSECDHERSAWITHAES128GCMSHA256 ...
        TLSECDHERSAWITHAES128GCMSHA256 ApplicationGatewaySslCipherSuite = "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
                // TLSECDHERSAWITHAES256CBCSHA ...
        TLSECDHERSAWITHAES256CBCSHA ApplicationGatewaySslCipherSuite = "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"
                // TLSECDHERSAWITHAES256CBCSHA384 ...
        TLSECDHERSAWITHAES256CBCSHA384 ApplicationGatewaySslCipherSuite = "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"
                // TLSECDHERSAWITHAES256GCMSHA384 ...
        TLSECDHERSAWITHAES256GCMSHA384 ApplicationGatewaySslCipherSuite = "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
                // TLSRSAWITH3DESEDECBCSHA ...
        TLSRSAWITH3DESEDECBCSHA ApplicationGatewaySslCipherSuite = "TLS_RSA_WITH_3DES_EDE_CBC_SHA"
                // TLSRSAWITHAES128CBCSHA ...
        TLSRSAWITHAES128CBCSHA ApplicationGatewaySslCipherSuite = "TLS_RSA_WITH_AES_128_CBC_SHA"
                // TLSRSAWITHAES128CBCSHA256 ...
        TLSRSAWITHAES128CBCSHA256 ApplicationGatewaySslCipherSuite = "TLS_RSA_WITH_AES_128_CBC_SHA256"
                // TLSRSAWITHAES128GCMSHA256 ...
        TLSRSAWITHAES128GCMSHA256 ApplicationGatewaySslCipherSuite = "TLS_RSA_WITH_AES_128_GCM_SHA256"
                // TLSRSAWITHAES256CBCSHA ...
        TLSRSAWITHAES256CBCSHA ApplicationGatewaySslCipherSuite = "TLS_RSA_WITH_AES_256_CBC_SHA"
                // TLSRSAWITHAES256CBCSHA256 ...
        TLSRSAWITHAES256CBCSHA256 ApplicationGatewaySslCipherSuite = "TLS_RSA_WITH_AES_256_CBC_SHA256"
                // TLSRSAWITHAES256GCMSHA384 ...
        TLSRSAWITHAES256GCMSHA384 ApplicationGatewaySslCipherSuite = "TLS_RSA_WITH_AES_256_GCM_SHA384"
            )
    // PossibleApplicationGatewaySslCipherSuiteValues returns an array of possible values for the ApplicationGatewaySslCipherSuite const type.
    func PossibleApplicationGatewaySslCipherSuiteValues() []ApplicationGatewaySslCipherSuite {
        return []ApplicationGatewaySslCipherSuite{TLSDHEDSSWITH3DESEDECBCSHA,TLSDHEDSSWITHAES128CBCSHA,TLSDHEDSSWITHAES128CBCSHA256,TLSDHEDSSWITHAES256CBCSHA,TLSDHEDSSWITHAES256CBCSHA256,TLSDHERSAWITHAES128CBCSHA,TLSDHERSAWITHAES128GCMSHA256,TLSDHERSAWITHAES256CBCSHA,TLSDHERSAWITHAES256GCMSHA384,TLSECDHEECDSAWITHAES128CBCSHA,TLSECDHEECDSAWITHAES128CBCSHA256,TLSECDHEECDSAWITHAES128GCMSHA256,TLSECDHEECDSAWITHAES256CBCSHA,TLSECDHEECDSAWITHAES256CBCSHA384,TLSECDHEECDSAWITHAES256GCMSHA384,TLSECDHERSAWITHAES128CBCSHA,TLSECDHERSAWITHAES128CBCSHA256,TLSECDHERSAWITHAES128GCMSHA256,TLSECDHERSAWITHAES256CBCSHA,TLSECDHERSAWITHAES256CBCSHA384,TLSECDHERSAWITHAES256GCMSHA384,TLSRSAWITH3DESEDECBCSHA,TLSRSAWITHAES128CBCSHA,TLSRSAWITHAES128CBCSHA256,TLSRSAWITHAES128GCMSHA256,TLSRSAWITHAES256CBCSHA,TLSRSAWITHAES256CBCSHA256,TLSRSAWITHAES256GCMSHA384}
    }

        // ApplicationGatewaySslPolicyName enumerates the values for application gateway ssl policy name.
    type ApplicationGatewaySslPolicyName string

    const (
                // AppGwSslPolicy20150501 ...
        AppGwSslPolicy20150501 ApplicationGatewaySslPolicyName = "AppGwSslPolicy20150501"
                // AppGwSslPolicy20170401 ...
        AppGwSslPolicy20170401 ApplicationGatewaySslPolicyName = "AppGwSslPolicy20170401"
                // AppGwSslPolicy20170401S ...
        AppGwSslPolicy20170401S ApplicationGatewaySslPolicyName = "AppGwSslPolicy20170401S"
            )
    // PossibleApplicationGatewaySslPolicyNameValues returns an array of possible values for the ApplicationGatewaySslPolicyName const type.
    func PossibleApplicationGatewaySslPolicyNameValues() []ApplicationGatewaySslPolicyName {
        return []ApplicationGatewaySslPolicyName{AppGwSslPolicy20150501,AppGwSslPolicy20170401,AppGwSslPolicy20170401S}
    }

        // ApplicationGatewaySslPolicyType enumerates the values for application gateway ssl policy type.
    type ApplicationGatewaySslPolicyType string

    const (
                // Custom ...
        Custom ApplicationGatewaySslPolicyType = "Custom"
                // Predefined ...
        Predefined ApplicationGatewaySslPolicyType = "Predefined"
            )
    // PossibleApplicationGatewaySslPolicyTypeValues returns an array of possible values for the ApplicationGatewaySslPolicyType const type.
    func PossibleApplicationGatewaySslPolicyTypeValues() []ApplicationGatewaySslPolicyType {
        return []ApplicationGatewaySslPolicyType{Custom,Predefined}
    }

        // ApplicationGatewaySslProtocol enumerates the values for application gateway ssl protocol.
    type ApplicationGatewaySslProtocol string

    const (
                // TLSv10 ...
        TLSv10 ApplicationGatewaySslProtocol = "TLSv1_0"
                // TLSv11 ...
        TLSv11 ApplicationGatewaySslProtocol = "TLSv1_1"
                // TLSv12 ...
        TLSv12 ApplicationGatewaySslProtocol = "TLSv1_2"
            )
    // PossibleApplicationGatewaySslProtocolValues returns an array of possible values for the ApplicationGatewaySslProtocol const type.
    func PossibleApplicationGatewaySslProtocolValues() []ApplicationGatewaySslProtocol {
        return []ApplicationGatewaySslProtocol{TLSv10,TLSv11,TLSv12}
    }

        // ApplicationGatewayTier enumerates the values for application gateway tier.
    type ApplicationGatewayTier string

    const (
                // ApplicationGatewayTierStandard ...
        ApplicationGatewayTierStandard ApplicationGatewayTier = "Standard"
                // ApplicationGatewayTierStandardV2 ...
        ApplicationGatewayTierStandardV2 ApplicationGatewayTier = "Standard_v2"
                // ApplicationGatewayTierWAF ...
        ApplicationGatewayTierWAF ApplicationGatewayTier = "WAF"
                // ApplicationGatewayTierWAFV2 ...
        ApplicationGatewayTierWAFV2 ApplicationGatewayTier = "WAF_v2"
            )
    // PossibleApplicationGatewayTierValues returns an array of possible values for the ApplicationGatewayTier const type.
    func PossibleApplicationGatewayTierValues() []ApplicationGatewayTier {
        return []ApplicationGatewayTier{ApplicationGatewayTierStandard,ApplicationGatewayTierStandardV2,ApplicationGatewayTierWAF,ApplicationGatewayTierWAFV2}
    }

        // DdosSettingsProtectionCoverage enumerates the values for ddos settings protection coverage.
    type DdosSettingsProtectionCoverage string

    const (
                // DdosSettingsProtectionCoverageBasic ...
        DdosSettingsProtectionCoverageBasic DdosSettingsProtectionCoverage = "Basic"
                // DdosSettingsProtectionCoverageStandard ...
        DdosSettingsProtectionCoverageStandard DdosSettingsProtectionCoverage = "Standard"
            )
    // PossibleDdosSettingsProtectionCoverageValues returns an array of possible values for the DdosSettingsProtectionCoverage const type.
    func PossibleDdosSettingsProtectionCoverageValues() []DdosSettingsProtectionCoverage {
        return []DdosSettingsProtectionCoverage{DdosSettingsProtectionCoverageBasic,DdosSettingsProtectionCoverageStandard}
    }

        // DeleteOptions enumerates the values for delete options.
    type DeleteOptions string

    const (
                // Delete ...
        Delete DeleteOptions = "Delete"
                // Detach ...
        Detach DeleteOptions = "Detach"
            )
    // PossibleDeleteOptionsValues returns an array of possible values for the DeleteOptions const type.
    func PossibleDeleteOptionsValues() []DeleteOptions {
        return []DeleteOptions{Delete,Detach}
    }

        // ExtendedLocationTypes enumerates the values for extended location types.
    type ExtendedLocationTypes string

    const (
                // EdgeZone ...
        EdgeZone ExtendedLocationTypes = "EdgeZone"
            )
    // PossibleExtendedLocationTypesValues returns an array of possible values for the ExtendedLocationTypes const type.
    func PossibleExtendedLocationTypesValues() []ExtendedLocationTypes {
        return []ExtendedLocationTypes{EdgeZone}
    }

        // FlowLogFormatType enumerates the values for flow log format type.
    type FlowLogFormatType string

    const (
                // JSON ...
        JSON FlowLogFormatType = "JSON"
            )
    // PossibleFlowLogFormatTypeValues returns an array of possible values for the FlowLogFormatType const type.
    func PossibleFlowLogFormatTypeValues() []FlowLogFormatType {
        return []FlowLogFormatType{JSON}
    }

        // GatewayLoadBalancerTunnelInterfaceType enumerates the values for gateway load balancer tunnel interface
        // type.
    type GatewayLoadBalancerTunnelInterfaceType string

    const (
                // External ...
        External GatewayLoadBalancerTunnelInterfaceType = "External"
                // Internal ...
        Internal GatewayLoadBalancerTunnelInterfaceType = "Internal"
                // None ...
        None GatewayLoadBalancerTunnelInterfaceType = "None"
            )
    // PossibleGatewayLoadBalancerTunnelInterfaceTypeValues returns an array of possible values for the GatewayLoadBalancerTunnelInterfaceType const type.
    func PossibleGatewayLoadBalancerTunnelInterfaceTypeValues() []GatewayLoadBalancerTunnelInterfaceType {
        return []GatewayLoadBalancerTunnelInterfaceType{External,Internal,None}
    }

        // GatewayLoadBalancerTunnelProtocol enumerates the values for gateway load balancer tunnel protocol.
    type GatewayLoadBalancerTunnelProtocol string

    const (
                // GatewayLoadBalancerTunnelProtocolNative ...
        GatewayLoadBalancerTunnelProtocolNative GatewayLoadBalancerTunnelProtocol = "Native"
                // GatewayLoadBalancerTunnelProtocolNone ...
        GatewayLoadBalancerTunnelProtocolNone GatewayLoadBalancerTunnelProtocol = "None"
                // GatewayLoadBalancerTunnelProtocolVXLAN ...
        GatewayLoadBalancerTunnelProtocolVXLAN GatewayLoadBalancerTunnelProtocol = "VXLAN"
            )
    // PossibleGatewayLoadBalancerTunnelProtocolValues returns an array of possible values for the GatewayLoadBalancerTunnelProtocol const type.
    func PossibleGatewayLoadBalancerTunnelProtocolValues() []GatewayLoadBalancerTunnelProtocol {
        return []GatewayLoadBalancerTunnelProtocol{GatewayLoadBalancerTunnelProtocolNative,GatewayLoadBalancerTunnelProtocolNone,GatewayLoadBalancerTunnelProtocolVXLAN}
    }

        // IPAllocationMethod enumerates the values for ip allocation method.
    type IPAllocationMethod string

    const (
                // Dynamic ...
        Dynamic IPAllocationMethod = "Dynamic"
                // Static ...
        Static IPAllocationMethod = "Static"
            )
    // PossibleIPAllocationMethodValues returns an array of possible values for the IPAllocationMethod const type.
    func PossibleIPAllocationMethodValues() []IPAllocationMethod {
        return []IPAllocationMethod{Dynamic,Static}
    }

        // IPVersion enumerates the values for ip version.
    type IPVersion string

    const (
                // IPv4 ...
        IPv4 IPVersion = "IPv4"
                // IPv6 ...
        IPv6 IPVersion = "IPv6"
            )
    // PossibleIPVersionValues returns an array of possible values for the IPVersion const type.
    func PossibleIPVersionValues() []IPVersion {
        return []IPVersion{IPv4,IPv6}
    }

        // InterfaceMigrationPhase enumerates the values for interface migration phase.
    type InterfaceMigrationPhase string

    const (
                // InterfaceMigrationPhaseAbort ...
        InterfaceMigrationPhaseAbort InterfaceMigrationPhase = "Abort"
                // InterfaceMigrationPhaseCommit ...
        InterfaceMigrationPhaseCommit InterfaceMigrationPhase = "Commit"
                // InterfaceMigrationPhaseCommitted ...
        InterfaceMigrationPhaseCommitted InterfaceMigrationPhase = "Committed"
                // InterfaceMigrationPhaseNone ...
        InterfaceMigrationPhaseNone InterfaceMigrationPhase = "None"
                // InterfaceMigrationPhasePrepare ...
        InterfaceMigrationPhasePrepare InterfaceMigrationPhase = "Prepare"
            )
    // PossibleInterfaceMigrationPhaseValues returns an array of possible values for the InterfaceMigrationPhase const type.
    func PossibleInterfaceMigrationPhaseValues() []InterfaceMigrationPhase {
        return []InterfaceMigrationPhase{InterfaceMigrationPhaseAbort,InterfaceMigrationPhaseCommit,InterfaceMigrationPhaseCommitted,InterfaceMigrationPhaseNone,InterfaceMigrationPhasePrepare}
    }

        // InterfaceNicType enumerates the values for interface nic type.
    type InterfaceNicType string

    const (
                // Elastic ...
        Elastic InterfaceNicType = "Elastic"
                // Standard ...
        Standard InterfaceNicType = "Standard"
            )
    // PossibleInterfaceNicTypeValues returns an array of possible values for the InterfaceNicType const type.
    func PossibleInterfaceNicTypeValues() []InterfaceNicType {
        return []InterfaceNicType{Elastic,Standard}
    }

        // NatGatewaySkuName enumerates the values for nat gateway sku name.
    type NatGatewaySkuName string

    const (
                // NatGatewaySkuNameStandard ...
        NatGatewaySkuNameStandard NatGatewaySkuName = "Standard"
            )
    // PossibleNatGatewaySkuNameValues returns an array of possible values for the NatGatewaySkuName const type.
    func PossibleNatGatewaySkuNameValues() []NatGatewaySkuName {
        return []NatGatewaySkuName{NatGatewaySkuNameStandard}
    }

        // ProvisioningState enumerates the values for provisioning state.
    type ProvisioningState string

    const (
                // Deleting ...
        Deleting ProvisioningState = "Deleting"
                // Failed ...
        Failed ProvisioningState = "Failed"
                // Succeeded ...
        Succeeded ProvisioningState = "Succeeded"
                // Updating ...
        Updating ProvisioningState = "Updating"
            )
    // PossibleProvisioningStateValues returns an array of possible values for the ProvisioningState const type.
    func PossibleProvisioningStateValues() []ProvisioningState {
        return []ProvisioningState{Deleting,Failed,Succeeded,Updating}
    }

        // PublicIPAddressMigrationPhase enumerates the values for public ip address migration phase.
    type PublicIPAddressMigrationPhase string

    const (
                // PublicIPAddressMigrationPhaseAbort ...
        PublicIPAddressMigrationPhaseAbort PublicIPAddressMigrationPhase = "Abort"
                // PublicIPAddressMigrationPhaseCommit ...
        PublicIPAddressMigrationPhaseCommit PublicIPAddressMigrationPhase = "Commit"
                // PublicIPAddressMigrationPhaseCommitted ...
        PublicIPAddressMigrationPhaseCommitted PublicIPAddressMigrationPhase = "Committed"
                // PublicIPAddressMigrationPhaseNone ...
        PublicIPAddressMigrationPhaseNone PublicIPAddressMigrationPhase = "None"
                // PublicIPAddressMigrationPhasePrepare ...
        PublicIPAddressMigrationPhasePrepare PublicIPAddressMigrationPhase = "Prepare"
            )
    // PossiblePublicIPAddressMigrationPhaseValues returns an array of possible values for the PublicIPAddressMigrationPhase const type.
    func PossiblePublicIPAddressMigrationPhaseValues() []PublicIPAddressMigrationPhase {
        return []PublicIPAddressMigrationPhase{PublicIPAddressMigrationPhaseAbort,PublicIPAddressMigrationPhaseCommit,PublicIPAddressMigrationPhaseCommitted,PublicIPAddressMigrationPhaseNone,PublicIPAddressMigrationPhasePrepare}
    }

        // PublicIPAddressSkuName enumerates the values for public ip address sku name.
    type PublicIPAddressSkuName string

    const (
                // PublicIPAddressSkuNameBasic ...
        PublicIPAddressSkuNameBasic PublicIPAddressSkuName = "Basic"
                // PublicIPAddressSkuNameStandard ...
        PublicIPAddressSkuNameStandard PublicIPAddressSkuName = "Standard"
            )
    // PossiblePublicIPAddressSkuNameValues returns an array of possible values for the PublicIPAddressSkuName const type.
    func PossiblePublicIPAddressSkuNameValues() []PublicIPAddressSkuName {
        return []PublicIPAddressSkuName{PublicIPAddressSkuNameBasic,PublicIPAddressSkuNameStandard}
    }

        // PublicIPAddressSkuTier enumerates the values for public ip address sku tier.
    type PublicIPAddressSkuTier string

    const (
                // Global ...
        Global PublicIPAddressSkuTier = "Global"
                // Regional ...
        Regional PublicIPAddressSkuTier = "Regional"
            )
    // PossiblePublicIPAddressSkuTierValues returns an array of possible values for the PublicIPAddressSkuTier const type.
    func PossiblePublicIPAddressSkuTierValues() []PublicIPAddressSkuTier {
        return []PublicIPAddressSkuTier{Global,Regional}
    }

        // ResourceIdentityType enumerates the values for resource identity type.
    type ResourceIdentityType string

    const (
                // ResourceIdentityTypeNone ...
        ResourceIdentityTypeNone ResourceIdentityType = "None"
                // ResourceIdentityTypeSystemAssigned ...
        ResourceIdentityTypeSystemAssigned ResourceIdentityType = "SystemAssigned"
                // ResourceIdentityTypeSystemAssignedUserAssigned ...
        ResourceIdentityTypeSystemAssignedUserAssigned ResourceIdentityType = "SystemAssigned, UserAssigned"
                // ResourceIdentityTypeUserAssigned ...
        ResourceIdentityTypeUserAssigned ResourceIdentityType = "UserAssigned"
            )
    // PossibleResourceIdentityTypeValues returns an array of possible values for the ResourceIdentityType const type.
    func PossibleResourceIdentityTypeValues() []ResourceIdentityType {
        return []ResourceIdentityType{ResourceIdentityTypeNone,ResourceIdentityTypeSystemAssigned,ResourceIdentityTypeSystemAssignedUserAssigned,ResourceIdentityTypeUserAssigned}
    }

        // RouteNextHopType enumerates the values for route next hop type.
    type RouteNextHopType string

    const (
                // RouteNextHopTypeInternet ...
        RouteNextHopTypeInternet RouteNextHopType = "Internet"
                // RouteNextHopTypeNone ...
        RouteNextHopTypeNone RouteNextHopType = "None"
                // RouteNextHopTypeVirtualAppliance ...
        RouteNextHopTypeVirtualAppliance RouteNextHopType = "VirtualAppliance"
                // RouteNextHopTypeVirtualNetworkGateway ...
        RouteNextHopTypeVirtualNetworkGateway RouteNextHopType = "VirtualNetworkGateway"
                // RouteNextHopTypeVnetLocal ...
        RouteNextHopTypeVnetLocal RouteNextHopType = "VnetLocal"
            )
    // PossibleRouteNextHopTypeValues returns an array of possible values for the RouteNextHopType const type.
    func PossibleRouteNextHopTypeValues() []RouteNextHopType {
        return []RouteNextHopType{RouteNextHopTypeInternet,RouteNextHopTypeNone,RouteNextHopTypeVirtualAppliance,RouteNextHopTypeVirtualNetworkGateway,RouteNextHopTypeVnetLocal}
    }

        // SecurityRuleAccess enumerates the values for security rule access.
    type SecurityRuleAccess string

    const (
                // Allow ...
        Allow SecurityRuleAccess = "Allow"
                // Deny ...
        Deny SecurityRuleAccess = "Deny"
            )
    // PossibleSecurityRuleAccessValues returns an array of possible values for the SecurityRuleAccess const type.
    func PossibleSecurityRuleAccessValues() []SecurityRuleAccess {
        return []SecurityRuleAccess{Allow,Deny}
    }

        // SecurityRuleDirection enumerates the values for security rule direction.
    type SecurityRuleDirection string

    const (
                // Inbound ...
        Inbound SecurityRuleDirection = "Inbound"
                // Outbound ...
        Outbound SecurityRuleDirection = "Outbound"
            )
    // PossibleSecurityRuleDirectionValues returns an array of possible values for the SecurityRuleDirection const type.
    func PossibleSecurityRuleDirectionValues() []SecurityRuleDirection {
        return []SecurityRuleDirection{Inbound,Outbound}
    }

        // SecurityRuleProtocol enumerates the values for security rule protocol.
    type SecurityRuleProtocol string

    const (
                // Ah ...
        Ah SecurityRuleProtocol = "Ah"
                // Asterisk ...
        Asterisk SecurityRuleProtocol = "*"
                // Esp ...
        Esp SecurityRuleProtocol = "Esp"
                // Icmp ...
        Icmp SecurityRuleProtocol = "Icmp"
                // TCP ...
        TCP SecurityRuleProtocol = "Tcp"
                // UDP ...
        UDP SecurityRuleProtocol = "Udp"
            )
    // PossibleSecurityRuleProtocolValues returns an array of possible values for the SecurityRuleProtocol const type.
    func PossibleSecurityRuleProtocolValues() []SecurityRuleProtocol {
        return []SecurityRuleProtocol{Ah,Asterisk,Esp,Icmp,TCP,UDP}
    }

        // TransportProtocol enumerates the values for transport protocol.
    type TransportProtocol string

    const (
                // TransportProtocolAll ...
        TransportProtocolAll TransportProtocol = "All"
                // TransportProtocolTCP ...
        TransportProtocolTCP TransportProtocol = "Tcp"
                // TransportProtocolUDP ...
        TransportProtocolUDP TransportProtocol = "Udp"
            )
    // PossibleTransportProtocolValues returns an array of possible values for the TransportProtocol const type.
    func PossibleTransportProtocolValues() []TransportProtocol {
        return []TransportProtocol{TransportProtocolAll,TransportProtocolTCP,TransportProtocolUDP}
    }

        // VirtualNetworkPrivateEndpointNetworkPolicies enumerates the values for virtual network private endpoint
        // network policies.
    type VirtualNetworkPrivateEndpointNetworkPolicies string

    const (
                // VirtualNetworkPrivateEndpointNetworkPoliciesDisabled ...
        VirtualNetworkPrivateEndpointNetworkPoliciesDisabled VirtualNetworkPrivateEndpointNetworkPolicies = "Disabled"
                // VirtualNetworkPrivateEndpointNetworkPoliciesEnabled ...
        VirtualNetworkPrivateEndpointNetworkPoliciesEnabled VirtualNetworkPrivateEndpointNetworkPolicies = "Enabled"
            )
    // PossibleVirtualNetworkPrivateEndpointNetworkPoliciesValues returns an array of possible values for the VirtualNetworkPrivateEndpointNetworkPolicies const type.
    func PossibleVirtualNetworkPrivateEndpointNetworkPoliciesValues() []VirtualNetworkPrivateEndpointNetworkPolicies {
        return []VirtualNetworkPrivateEndpointNetworkPolicies{VirtualNetworkPrivateEndpointNetworkPoliciesDisabled,VirtualNetworkPrivateEndpointNetworkPoliciesEnabled}
    }

        // VirtualNetworkPrivateLinkServiceNetworkPolicies enumerates the values for virtual network private link
        // service network policies.
    type VirtualNetworkPrivateLinkServiceNetworkPolicies string

    const (
                // VirtualNetworkPrivateLinkServiceNetworkPoliciesDisabled ...
        VirtualNetworkPrivateLinkServiceNetworkPoliciesDisabled VirtualNetworkPrivateLinkServiceNetworkPolicies = "Disabled"
                // VirtualNetworkPrivateLinkServiceNetworkPoliciesEnabled ...
        VirtualNetworkPrivateLinkServiceNetworkPoliciesEnabled VirtualNetworkPrivateLinkServiceNetworkPolicies = "Enabled"
            )
    // PossibleVirtualNetworkPrivateLinkServiceNetworkPoliciesValues returns an array of possible values for the VirtualNetworkPrivateLinkServiceNetworkPolicies const type.
    func PossibleVirtualNetworkPrivateLinkServiceNetworkPoliciesValues() []VirtualNetworkPrivateLinkServiceNetworkPolicies {
        return []VirtualNetworkPrivateLinkServiceNetworkPolicies{VirtualNetworkPrivateLinkServiceNetworkPoliciesDisabled,VirtualNetworkPrivateLinkServiceNetworkPoliciesEnabled}
    }

